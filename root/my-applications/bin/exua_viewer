#!/bin/bash
# Лицензия: GNU GPL v.3.
# Copyright Sergey Rodin 2013
# Console version

searchPattern='player_list'
declare -a titleArr
declare -a playFileArr
declare -a playFile
declare -a seriArr
declare -a serialTitle
declare -a fullLinkArr
declare -a isSubtitles
declare -a subtitleLinkArr

showHelp(){
    echo 'Использование.'
    echo 'exua_viewer параметры: ссылка на HTML-страницу с видео http:/ex.ua/.....'
    echo 'или запрос для поиска в кавычках'
    echo 'Также возможен запуск без параметра.'
    echo 'Управление в строке поиска:'
    echo 'q - выход,' 
    echo 'n - следующая страница поиска,'
    echo 'b - предыдущая страница поиска,'
    echo 'h - справка, выводит это сообщение.'
}

# Вывод справки
echo $1 | grep -q '^[-][-]\?help'
if [ $? -eq 0 ]
then 
   showHelp
   exit 0
fi

# Проверка подключения к Интернет
internet_status() {
  LANG=C route | grep -q 'default[ ].*[ ]0\.0\.0\.0[ ]' && grep -wq 'nameserver' /etc/resolv.conf #&& ping -c1 google.com &>/dev/null
}

if ! internet_status; then
   echo "Проверьте подключение к Интернет";
   exit 1
fi

# Разделить на ссылку и поиск
# Получение прямой ссылки и сразу воспроизведение
echo $1 | grep -q 'http://www.ex.ua/get/'
if [ $? -eq 0 ]
then
    echo "Ссылка этого формата не поддерживается программой."
    exit 0 
fi

# Получение адреса для нескольких файлов
serialDetect(){
	count=0
	playFile=( )
	while read line
	do 
	   if [ -n "$line" ]
	   then
	       playFile[$count]=$line 
	       (( count++ ))
	   fi
	done
	return $count
}<<EOF
$(curl -s $fullLink | grep -o 'http://www.ex.ua[^"]\+.flv')
EOF

# Получение заголовков для нескольких файлов
serialHeaders(){
	count=0
	serialTitle=( )
	while read line
	do 
	   if [ -n "$line" ]
	   then
	       serialTitle[$count]=${line%*.*} # убрать расширение файла из заголовка
	       (( count++ ))
	   fi
	done
}<<EOF
$(curl -s $fullLink | grep "player_info" | grep -o '{[^}]\+}' | grep -o "'[^']\+'" | cut -d"'" -f2)
EOF

# Получение ссылок на субтитры
subtitlesLinks(){
	count=1
	subtitleLinkArr=( )
	while read line
	do 
	   if [ -n "$line" ]
	   then
	       subtitleLinkArr[$count]=$line 
	       (( count++ ))
	   fi
	done
}<<EOF
$(curl -s $currLink | grep ".srt" | grep -o "<a href=[^<]\+" | grep -o "/get/[0-9]\+")
EOF

# Получение заголовков для субтитров
subtitlesHeaders(){
	count=1
	subtitleHeader=( )
	while read line
	do 
	   if [ -n "$line" ]
	   then
	       subtitleHeader[$count]=${line%*.*} # убрать расширение файла из заголовка
	       (( count++ ))
	   fi
	done
}<<EOF
$(curl -s $currLink | grep ".srt" | grep -o "<a href=[^<]\+" | cut -d'>' -f2)
EOF

playUrl(){ # поиск и воспроизведение по URL ex.ua    
    #playFile=$(curl -s "$1" | grep $searchPattern | cut -d'"' -f8)
    echo "Поиск файлов по ссылке..."
    fullLink="$1"
    if [[ -n "$1" ]]
    then
        titleArr=( )
	    playFileArr=( )
	    seriArr=( )
	    fullLinkArr=( )
	    isSubtitles=( )
	    serialDetect
	    serDetExit=$?
	    isSub=$(curl -s $fullLink | grep -c ".srt")
	    if [ $serDetExit -eq 0 ]
	    then
	        oneOrMany=0
	    else 
	        oneOrMany=1
	    fi
	    serialHeaders
	    for (( j=0,i=1; j<serDetExit; i++,j++ ))
	    do
	        titleArr[$i]+="$i. "${serialTitle[$j]}
	        playFileArr[$i]=${playFile[$j]}
	        seriArr[$i]=$oneOrMany
	        isSubtitles[$i]=$isSub
	        fullLinkArr[$i]=$fullLink
	    done
    fi
}

# Параметр - это фраза для поиска 
choiceAndSearch="$1"
searchSave="$1"
i=1
searchResults(){
	i=1
	titleArr=( )
	playFileArr=( )
	seriArr=( )
	fullLinkArr=( )
	isSubtitles=( )
	
	echo "Подождите. Обработка информации..."
	while read line
	do
	   echo -n ">> "
	   link=$(echo $line | grep -o '/[0-9]\+')
	   title=$(echo $line | grep -o '>[^<]\+.<'| cut -d '>' -f2 | cut -d '<' -f1)
	   fullLink="http://www.ex.ua$link"
	   # Отображать ссылку только если на странице существует flv-файл
	   serialDetect # определение, один или несколько видеофайлов на странице
	   serDetExit=$?
	   if [ $serDetExit -gt 0 ]
	   then
	       isSub=$(curl -s $fullLink | grep -c ".srt")
	       # Определение сериала
	       if [ $serDetExit -eq 1 ]
	       then # Если на странице один видеофайл
	           titleArr[$i]="$i. $title"
	           playFileArr[$i]=${playFile[0]} 
	           seriArr[$i]=0
	           isSubtitles[$i]=$isSub
	           fullLinkArr[$i]=$fullLink
	           (( i++ ))
	       else # Если на странице несколько видеофайлов
	           titleArr[$i]="$title (несколько видеофайлов)\n"
	           # Получить заголовки нескольких видеофайлов
	           serialHeaders
	           for (( j=0; j<serDetExit; i++,j++ ))
	           do
	               titleArr[$i]+="$i.\t"${serialTitle[$j]}
	               playFileArr[$i]=${playFile[$j]}
	               seriArr[$i]=1
	               isSubtitles[$i]=$isSub
	               fullLinkArr[$i]=$fullLink
	           done
	       fi 
	   fi
	done
	echo
	return 0
}<<EOF
$(curl -s http://www.ex.ua/search?"$search" | grep '^<tr><td><a href=' | grep -o "</a><a href='/[0-9]\+'><b>[^<]\+.</b>")
EOF

playSearchResults(){
    # Отображение массива заголовков
	for (( j=1;j<i;j++ ))
	do
	   echo -ne ${titleArr[$j]} | sed -e "s/&#39;/'/g" | sed -e "s/&quot;/'/g"
	   # Если это сериал - вывести информацию об этом
	   if [ ${seriArr[$j]} -eq 0 ]
	   then echo -n " (один видеофайл)"
	   fi
	   
	   if [ ${isSubtitles[$j]} -eq 0 ]
	   then echo
	   else echo " (субтитры)"
	   fi 
	done
	echo -n "->>Введите фразу для поиска "
	# если результатов поиска нет, то не выводить фразу о результатах
	if [ $i -gt 1 ] 
	then
	    echo -n "или выберите один из результатов "
	fi
	echo "(h - справка)"
	echo -n "> "
	read choiceAndSearch
	if [ "$choiceAndSearch" = "q" ] || [ "$choiceAndSearch" = "й" ] # нажмите q для выхода
	then 
	    exit 0
	fi
    # Вывод справки
    if [ "$choiceAndSearch" = "h" ] || [ "$choiceAndSearch" = "р" ]
	then 
	    showHelp
	    return 0
	fi
	# Переход на следующую страницу
	if [ "$choiceAndSearch" = "n" ] || [ "$choiceAndSearch" = "т" ] 
	then 
	    (( page++ ))
	    (( pageDisplay=page+1 ))
	    echo "Переход на следующую ($pageDisplay) страницу поиска..."
	    choiceAndSearch="$searchSave" # скопировать последний запрос
	    return 1 # переход в режим поиска
	fi
	# Переход на предыдущую страницу
	if [ "$choiceAndSearch" = "b" ] || [ "$choiceAndSearch" = "и" ] 
	then 
	    (( page-- ))
	    (( pageDisplay=page+1 ))
	    choiceAndSearch="$searchSave" # скопировать последний запрос
	    if [ $page -gt 0 ] 
	    then echo "Переход на предыдущую ($pageDisplay) страницу поиска..."
	    fi
	    return 1 # переход в режим поиска
	fi
	# Есть возможность ввести URL страницы с видео
	echo $choiceAndSearch | grep -q '^http://www.ex.ua/[0-9]\+'
    if [ $? -eq 0 ]
    then
        playUrl $choiceAndSearch
        return 0
    fi
	# Отфильтровать все символы кроме букв и цифр
    echo $choiceAndSearch | grep -q '[^А-Яа-яA-Za-z0-9. ]\+'
    if [ $? -eq 0 ]
	then 
	echo "Недопустимые символы. Разрешены буквы, цифры, точка и пробел."
	return 0
	fi
	# Если это текст - поиск
	echo $choiceAndSearch | grep -oq '[А-Яа-яA-Za-z. ]\+'
	if [ $? -eq 0 ]
	then 
	    # сохранить поисковый запрос
	    searchSave="$choiceAndSearch"
	    # сбросить значение переменной page
	    page=0
	return 1
	fi
	# Если это число - выбор
	if [[ $choiceAndSearch -gt 0 && $choiceAndSearch -lt $i ]]
	then
	   # Предложить выбрать и подключить субтитры, если они есть.
	   if [ ${isSubtitles[$choiceAndSearch]} -gt 0 ]
	   then
	       # Получить субтитры 
	       currLink=${fullLinkArr[$choiceAndSearch]}
	       echo "Подождите. Поиск субтитров..."
	       subtitlesLinks
	       subtitlesHeaders
	       length=${#subtitleHeader[*]}
	       (( length++ ))
	       # Выбор субтитров из списка
	       for (( j=1;j<length;j++ ))
	       do
	           echo "$j. "${subtitleHeader[$j]}
	       done
	       echo "->>Выберите подходящие субтитры из списка выше"
	       echo -n "> "
	       read subChoice
	       # Разрешены только цифры
           echo $subChoice | grep -q '[0-9]\+'
           if [ $? -eq 0 ]
           then
               if [ $subChoice -gt 0 ] || [ $subChoice -lt $length ]
	           then
	               subtitleCommand="-sub http://www.ex.ua${subtitleLinkArr[$subChoice]}"
	           fi
           fi
           # Если субтитров нет стереть переменную subtitleCommand
           else subtitleCommand=""  
	   fi	   
	   mplayer -cache 1000 ${playFileArr[$choiceAndSearch]} $subtitleCommand
	   return 0   
	fi
	return 0
}

resPerPage=20

playExit=1

# Получение ссылки на HTML-страницу с поиском видеофайла и воспроизведением
echo $1 | grep -q 'http://www.ex.ua/'
if [ $? -eq 0 ]
then
    playUrl $1
    playExit=0
fi

page=0
while true
do
if [ $playExit -eq 1 ]
then
    # переключение страниц результатов поиска
    if [ $page -gt 0 ]
    then
        # установка количества результатов на странице
        if [ $resPerPage -gt 3 ] && [ $resPerPage -lt 100 ] && [ $resPerPage -ne 20 ]
        then
            search="s=$choiceAndSearch&p=$page&per=$resPerPage"
        else
            search="s=$choiceAndSearch&p=$page"
        fi
    else
        # установка количества результатов на странице
        if [ $resPerPage -gt 3 ] && [ $resPerPage -lt 100 ] && [ $resPerPage -ne 20 ]
        then
            search="s=$choiceAndSearch&per=$resPerPage"
        else
            search="s=$choiceAndSearch"
        fi
    fi
    # Если в поиске - ссылка - не пропускать отсюда
    echo $choiceAndSearch | grep -q '^http://www.ex.ua/[0-9]\+'
    if [ $? -eq 0 ]
    then
        choiceAndSearch=""
    fi
    if [ -n "$choiceAndSearch" ]
    then
        searchResults
    fi
    playExit=$?   
else
    playSearchResults
    playExit=$?
fi

done
